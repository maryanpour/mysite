1. start a project
]$ django-admin.py startproject mysite

2. go to the project directory
]$ cd mysite/

3. Validate
$] python manage.py runserver
- visit http://127.0.0.1:8000/ in a browser to see "It worked!"


4. Create a View
- create file views.py >
    from django.http import HttpResponse
    def hello(request):
        return HttpResponse("Hello world")

5. Create a URLconf
- in urls.py >
    from mysite.views import hello
    urlpatterns = patterns('',
        ('^hello/$', hello),
    )

6. Validate the new link
    - visit http://127.0.0.1:8000/hello/

7. Create a Template System
    - Create an html file = current_datetime.html
        + put it under mysite/templates
        + edit current_datetime.html
        + body of the text
        <html><body>It is now {{ current_date }}.</body></html>
   
    - Let settings.py know where to find this html file.
        TEMPLATE_DIRS = (
            '/home/Masoud/TOPICS/DJANGO/mysite/templates',
        )   

    - Create function current_time in views.py
        from django.shortcuts import render_to_response
        import datetime
        def current_datetime(request):
            now = datetime.datetime.now()
            return render_to_response('current_datetime.html', {'current_date': now})

    - Hook this function to urls.py whenever ~/time/ is called
        + in urls.py, add this line to urlpatterns
                ('^time/$',current_datetime),
   
    - Validate by visiting http://127.0.0.1:8000/time/


8. Configuring the Database
    - Django 1.0 works with python2.6 and not with python3.01
    - install sqlite3
    - edit settings.py
        DATABASE_ENGINE = 'sqlite3'  
        DATABASE_NAME = '/home/Masoud/TOPICS/DJANGO/mysite/sqlite.db'
    - validate the configuration
        python manage.py shell
        >>> from django.db import connection
        >>> cursor = connection.cursor()
        { you should see no error}


9. Create an application
    - python manage.py startapp books
    - Edit books/models.py
        from django.db import models
        class Author(models.Model):
            first_name = models.CharField(max_length=30)
            last_name = models.CharField(max_length=40)
            email = models.EmailField()
    - Install the model
         add to settings.py : 
            INSTALLED_APPS = (
                'mysite.books',
            )

    - Validate
        python manage.py validate


10. Commit sql to database
    - python manage.py syncdb
    { the first time, it will ask to setup a superuser}


   
11. Activating the Admin Interface
    - Add 'django.contrib.admin' to the INSTALLED_APPS setting.py
    - Make sure INSTALLED_APPS contains 'django.contrib.auth',
         'django.contrib.contenttypes' and 'django.contrib.sessions'.
    - Make sure MIDDLEWARE_CLASSES contains 'django.middleware.common.CommonMiddleware',
         'django.contrib.sessions.middleware.SessionMiddleware' and
         'django.contrib.auth.middleware.AuthenticationMiddleware'.

    - run 'python manage.py syncdb' again
    - Create a supersuer if you havent done so already
        python manage.py createsuperuser

    - Activate admin urls in urls.py
        + from django.contrib import admin
        + admin.autodiscover()
        + urlpatterns = patterns('',
            # ...
            (r'^admin/', include(admin.site.urls)),
            # ...
        + here is a problem with the Django book
            the above line messes up the whole thing.
            It should be:
             (r'^admin/(.*)', admin.site.root),

    - Validate
        + run server 'python manage.py runserver'
        + visit http://127.0.0.1:8000/admin/


12. Adding Models to the Admin Site
    - Within the books directory (mysite/books), create a file called admin.py,
    and type in the following lines of code:
    from django.contrib import admin
    from mysite.books.models import Publisher, Author, Book
    admin.site.register(Publisher)
    admin.site.register(Author)
    admin.site.register(Book)

	- Validate: visit http://127.0.0.1:8000/admin/

13. A Simple Form-Handling Example
	- in some views.py:
		from django.shortcuts import render_to_response
		def search_form(request):
		    return render_to_response('search_form.html')
	- The accompanying template, search_form.html, could look like this:
	<html> <head>   <title>Search</title> </head>
	<body> 
		<form action="/search/" method="get">
        		<input type="text" name="q"> <input type="submit" value="Search">
    		</form>
	</body> </html>

	- URLpattern in urls.py : (r'^search-form/$', views.search_form),
	
	- Make sure the html file is accessible
		in settings.py : TEMPLATE_DIRS = (
				'/home/Masoud/TOPICS/DJANGO/mysite/templates',

	- Validate to see a simple search form:
		visit http://127.0.0.1:8000/search-form/
	- If you submit any query, you will get a 404 error page, becaue the form points to the URL /search/, which
		 hasnâ€™t yet been implemented. Look at the action part in search_form.html
	
	- Add a second view function
		+ in urls.py --> (r'^search/$', views.search),
		+ define the search function in books/views.py
			def search(request):
			    if 'q' in request.GET:
				    message = 'You searched for: %r' % request.GET['q']
			    else:
			        message = 'You submitted an empty form.'
			    return HttpResponse(message)
		+ Validate by submitting any string to the search box









   

